import { ReactNode } from 'react'

interface IconPropsType {
  [key: string]: {
    icon: (width: string, height: string, color?: string) => ReactNode
  }
}

export const navIconSet: IconPropsType = {
  NonFilledArrow: {
    icon: (
      width: string,
      height: string,
      color = 'rgba(0, 0, 0, 0.5)',
    ): ReactNode => (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        className="ionicon"
        viewBox="0 0 512 512"
        fill={color}
        width={width}
        height={height}
      >
        <title>Chevron Forward</title>
        <path
          fill="none"
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="48"
          d="M184 112l144 144-144 144"
        />
      </svg>
    ),
  },
  Home: {
    icon: (
      width: string,
      height: string,
      color = 'rgba(0, 0, 0, 0.5)',
    ): ReactNode => (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 512 512"
        fill={color}
        width={width}
        height={height}
      >
        <title>Home</title>
        <path
          d="M80 212v236a16 16 0 0016 16h96V328a24 24 0 0124-24h80a24 24 0 0124 24v136h96a16 16 0 0016-16V212"
          fill="none"
          stroke="currentColor"
          strokeWidth="32"
        />
        <path
          d="M480 256L266.89 52c-5-5.28-16.69-5.34-21.78 0L32 256M400 179V64h-48v69"
          fill="none"
          stroke="currentColor"
          strokeWidth="32"
        />
      </svg>
    ),
  },
  Github: {
    icon: (width: string, height: string, color = 'black'): ReactNode => (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        className="ionicon"
        viewBox="0 0 512 512"
        fill={color}
        width={width}
        height={height}
      >
        <title>Logo Github</title>
        <path d="M256 32C132.3 32 32 134.9 32 261.7c0 101.5 64.2 187.5 153.2 217.9a17.56 17.56 0 003.8.4c8.3 0 11.5-6.1 11.5-11.4 0-5.5-.2-19.9-.3-39.1a102.4 102.4 0 01-22.6 2.7c-43.1 0-52.9-33.5-52.9-33.5-10.2-26.5-24.9-33.6-24.9-33.6-19.5-13.7-.1-14.1 1.4-14.1h.1c22.5 2 34.3 23.8 34.3 23.8 11.2 19.6 26.2 25.1 39.6 25.1a63 63 0 0025.6-6c2-14.8 7.8-24.9 14.2-30.7-49.7-5.8-102-25.5-102-113.5 0-25.1 8.7-45.6 23-61.6-2.3-5.8-10-29.2 2.2-60.8a18.64 18.64 0 015-.5c8.1 0 26.4 3.1 56.6 24.1a208.21 208.21 0 01112.2 0c30.2-21 48.5-24.1 56.6-24.1a18.64 18.64 0 015 .5c12.2 31.6 4.5 55 2.2 60.8 14.3 16.1 23 36.6 23 61.6 0 88.2-52.4 107.6-102.3 113.3 8 7.1 15.2 21.1 15.2 42.5 0 30.7-.3 55.5-.3 63 0 5.4 3.1 11.5 11.4 11.5a19.35 19.35 0 004-.4C415.9 449.2 480 363.1 480 261.7 480 134.9 379.7 32 256 32z" />
      </svg>
    ),
  },
  Profile: {
    icon: (
      width: string,
      height: string,
      color = 'rgba(0, 0, 0, 0.5)',
    ): ReactNode => (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        className="ionicon"
        viewBox="0 0 512 512"
        fill={color}
        width={width}
        height={height}
      >
        <title>Person</title>
        <path
          d="M344 144c-3.92 52.87-44 96-88 96s-84.15-43.12-88-96c-4-55 35-96 88-96s92 42 88 96z"
          fill="none"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="32"
        />
        <path
          d="M256 304c-87 0-175.3 48-191.64 138.6C62.39 453.52 68.57 464 80 464h352c11.44 0 17.62-10.48 15.65-21.4C431.3 352 343 304 256 304z"
          fill="none"
          stroke="currentColor"
          strokeMiterlimit="10"
          strokeWidth="32"
        />
      </svg>
    ),
  },
  Car: {
    icon: (
      width: string,
      height: string,
      color = 'rgba(140, 235, 236, 0.5)',
    ): ReactNode => (
      <svg
        version="1.1"
        id="Layer_1"
        xmlns="http://www.w3.org/2000/svg"
        x="0px"
        y="0px"
        fill="blue"
        width={width}
        height={height}
        viewBox="0 0 128 128"
        enableBackground="new 0 0 128 128"
      >
        <g>
          <g>
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              fill="red"
              d="M8,84h8v-8H8V84z M16,68v8h8v-8H16z M24,84l8-8h-8V84z M32,68v8
			h8v-8H32z M40,84h8v-8h-8V84z M48,68v8h8v-8H48z M56,84h8v-8h-8V84z M64,68v8h8v-8H64z M72,84h8v-8h-8V84z M80,68v8h8v-8H80z
			 M88,84l8-8h-8V84z M96,68v8h8v-8H96z M104,84h8v-8h-8V84z M112,68v8h8v-8H112z M16,28H8v8h8V28z M48,28h-8v8h8V28z M64,28h-8v8h8
			V28z M80,28h-8v8h8V28z M112,28h-8v8h8V28z M96,28h-8v8h8V28z M32,28h-8v8h8V28z"
            />
          </g>
        </g>
        <path
          fill="black"
          d="M112,20H16C7.164,20,0,27.164,0,36v40c0,8.836,7.164,16,16,16c0,8.836,7.16,16,16,16s16-7.164,16-16h32
	c0,8.836,7.16,16,16,16s16-7.164,16-16c8.836,0,16-7.164,16-16V36C128,27.164,120.836,20,112,20z M16,28h96c4.41,0,8,3.586,8,8H8
	C8,31.586,11.59,28,16,28z M48,60H32V44h16V60z M72,60H56V44h16V60z M96,60H80V44h16V60z M8,44h16v16H8V44z M32,100
	c-4.41,0-8-3.586-8-8s3.59-8,8-8s8,3.586,8,8S36.41,100,32,100z M96,100c-4.41,0-8-3.586-8-8s3.59-8,8-8s8,3.586,8,8
	S100.41,100,96,100z M120,76c0,4.414-3.59,8-8,8h-2.219c-2.77-4.766-7.871-8-13.781-8s-11.012,3.234-13.781,8H45.781
	c-2.77-4.766-7.871-8-13.781-8s-11.012,3.234-13.781,8H16c-4.41,0-8-3.586-8-8v-8h112V76z M104,60V44h16v16H104z"
        />
      </svg>
    ),
  },
  Ghost: {
    icon: (
      width: string,
      height: string,
      color = 'rgba(140, 235, 236, 0.5)',
    ): ReactNode => (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        className="ionicon"
        viewBox="0 0 512 512"
        fill={color}
        width={width}
        height={height}
      >
        <title>Logo Snapchat</title>
        <path
          stroke="black"
          strokeWidth="32"
          d="M496 347.21a190.31 190.31 0 01-32.79-5.31c-27.28-6.63-54.84-24.26-68.12-52.43-6.9-14.63-2.64-18.59 11.86-24 14.18-5.27 29.8-7.72 36.86-23 5.89-12.76 1.13-27.76-10.41-35.49-15.71-10.53-30.35-.21-46.62 2.07 3.73-46.66 8.66-88.57-22.67-127.73C338.14 48.86 297.34 32 256.29 32s-81.86 16.86-107.81 49.33c-31.38 39.26-26.4 81.18-22.67 127.92-16.32-2.25-30.81-12.79-46.63-2.18-14.72 9.85-17 29.76-5.44 43s31.64 9.5 43.45 20.6c6.49 6.09 3.49 12.61-.35 20.14-14.48 28.4-39.26 45.74-69.84 51.56-4 .76-22.31 2.87-31 3.65 0 9.28.52 16.78 1.63 21.73 2.94 13.06 12.32 23.58 23.69 30.1 11.18 6.4 35.48 6.43 41.68 15.51 3 4.48 1.76 12.28 5.33 17.38a23.8 23.8 0 0015.37 9.75c18.61 3.61 37.32-7.2 56.42-2.1 14.85 3.95 26.52 15.87 39.26 24 15.51 9.85 32.34 16.42 50.83 17.49 38.1 2.21 59.93-18.91 90.58-36.42 19.5-11.14 38.15-3.86 58.88-2.68 20.1 1.15 23.53-9.25 29.62-24.88a27.37 27.37 0 001.54-4.85 10.52 10.52 0 002.28-1.47c2-1.57 10.55-2.34 12.76-2.86 10.28-2.44 20.34-5.15 29.17-11.2 11.31-7.76 17.65-18.5 19.58-32.64a93.73 93.73 0 001.38-15.67zM208 128c8.84 0 16 10.74 16 24s-7.16 24-16 24-16-10.74-16-24 7.16-24 16-24zm103.62 77.7c-15.25 15-35 23.3-55.62 23.3a78.37 78.37 0 01-55.66-23.34 8 8 0 0111.32-11.32A62.46 62.46 0 00256 213c16.39 0 32.15-6.64 44.39-18.7a8 8 0 0111.23 11.4zM304 176c-8.84 0-16-10.75-16-24s7.16-24 16-24 16 10.75 16 24-7.16 24-16 24z"
        />
      </svg>
    ),
  },
  Dot: {
    icon: (
      width: string,
      height: string,
      color = 'rgba(2, 2, 2, 0.5)',
      // color: 'black',
    ): ReactNode => (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        className="ionicon"
        viewBox="0 0 512 512"
        fill={color}
        width={width}
        height={height}
      >
        <title>Ellipsis Horizontal</title>
        <circle
          cx="256"
          cy="256"
          r="32"
          fill={color}
          stroke={color}
          strokeMiterlimit="10"
          strokeWidth="32"
        />
        <circle
          cx="416"
          cy="256"
          r="32"
          fill={color}
          stroke={color}
          strokeMiterlimit="10"
          strokeWidth="32"
        />
        <circle
          cx="96"
          cy="256"
          r="32"
          fill={color}
          stroke={color}
          strokeMiterlimit="10"
          strokeWidth="32"
        />
      </svg>
    ),
  },
  All: {
    icon: (width: string, height: string, color = 'black'): ReactNode => (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        className="ionicon"
        viewBox="0 0 512 512"
        fill={color}
        width={width}
        height={height}
      >
        <title>Rainy</title>
        <path
          d="M114.61 162.85A16.07 16.07 0 00128 149.6C140.09 76.17 193.63 32 256 32c57.93 0 96.62 37.75 112.2 77.74a15.84 15.84 0 0012.2 9.87c50 8.15 91.6 41.54 91.6 99.59 0 59.4-48.6 100.8-108 100.8H130c-49.5 0-90-24.7-90-79.2 0-48.47 38.67-72.22 74.61-77.95z"
          fill="none"
          stroke="currentColor"
          strokeLinejoin="round"
          strokeWidth="32"
        />
        <path
          fill="none"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="32"
          d="M144 384l-32 48M224 384l-64 96M304 384l-32 48M384 384l-64 96"
        />
      </svg>
    ),
  },
  OpenArrow: {
    icon: (width: string, height: string, color = 'black'): ReactNode => (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        className="ionicon"
        viewBox="0 0 512 512"
        fill={color}
        width={width}
        height={height}
      >
        <title>Caret Down</title>
        <path d="M98 190.06l139.78 163.12a24 24 0 0036.44 0L414 190.06c13.34-15.57 2.28-39.62-18.22-39.62h-279.6c-20.5 0-31.56 24.05-18.18 39.62z" />
      </svg>
    ),
  },
  Algorithm: {
    icon: (width: string, height: string, color = 'black'): ReactNode => (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        className="ionicon"
        viewBox="0 0 512 512"
        width={width}
        height={height}
        fill="black"
      >
        <title>Code Slash</title>
        <path
          fill="none"
          stroke={color}
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="40"
          d="M160 368L32 256l128-112M352 368l128-112-128-112M304 96l-96 320"
        />
      </svg>
    ),
  },
  LifeCycle: {
    icon: (
      width: string,
      height: string,
      color = 'rgba(234, 15, 15, 0.5)',
    ): ReactNode => (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        className="ionicon"
        viewBox="0 0 512 512"
        width={width}
        height={height}
        fill="rgba(234, 15, 15, 0.5)"
      >
        <title>Code Slash</title>
        <path
          fill="none"
          stroke={color}
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="50"
          d="M160 368L32 256l128-112M352 368l128-112-128-112M304 96l-96 320"
        />
      </svg>
    ),
  },
  Arrow: {
    icon: (width: string, height: string, color = 'black'): ReactNode => (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        className="ionicon"
        viewBox="0 0 512 512"
        width={width}
        height={height}
        fill={color}
      >
        <path d="M190.06 414l163.12-139.78a24 24 0 000-36.44L190.06 98c-15.57-13.34-39.62-2.28-39.62 18.22v279.6c0 20.5 24.05 31.56 39.62 18.18z" />
      </svg>
    ),
  },
  CSS: {
    icon: (width: string, height: string, color = 'black'): ReactNode => (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 512 512"
        fill={color}
        width={width}
        height={height}
      >
        <path d="M64 32l35 403.22L255.77 480 413 435.15 448 32zm290.68 334.9L256.07 395l-98.46-28.24-6.75-77.76h48.26l3.43 39.56 53.59 15.16.13.28 53.47-14.85 5.64-64.15H203l-4-50h120.65l4.35-51H140l-4-49h240.58z" />
      </svg>
    ),
  },
  Webpack: {
    icon: (width: string, height: string, color = 'black'): ReactNode => (
      <svg
        fill={color}
        width={width}
        height={height}
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 64 64"
      >
        <path d="M 31.964844 2.0019531 C 31.954332 2.0023108 31.94409 2.0051711 31.933594 2.0058594 C 31.90767 2.0075438 31.883314 2.0157925 31.857422 2.0195312 C 31.759252 2.0336532 31.665431 2.062263 31.574219 2.1054688 C 31.558481 2.1128875 31.540902 2.1108276 31.525391 2.1191406 L 5.5253906 16.119141 C 5.4421343 16.164249 5.3685422 16.220799 5.3027344 16.285156 C 5.2890357 16.29851 5.2804952 16.315961 5.2675781 16.330078 C 5.2022412 16.401725 5.1494867 16.481508 5.1074219 16.568359 C 5.093182 16.597601 5.0797471 16.625492 5.0683594 16.65625 C 5.028154 16.764707 5.0003257 16.876889 5 16.996094 C 5 16.996094 5 16.998047 5 16.998047 C 5 16.998047 5 17 5 17 L 5 47 C 5 47.08825 5.0129688 47.176656 5.0351562 47.259766 C 5.0651377 47.370919 5.1183474 47.472453 5.1835938 47.566406 C 5.1988514 47.588502 5.2153035 47.607981 5.2324219 47.628906 C 5.305296 47.717859 5.388207 47.798964 5.4902344 47.859375 C 5.4920275 47.860444 5.4942951 47.860271 5.4960938 47.861328 C 5.4977509 47.862297 5.4983353 47.864273 5.5 47.865234 L 31.488281 62.859375 C 31.489536 62.860116 31.490929 62.860592 31.492188 62.861328 C 31.493452 62.862074 31.494827 62.862542 31.496094 62.863281 L 31.5 62.865234 C 31.545206 62.891271 31.593525 62.905533 31.640625 62.923828 C 31.67391 62.93674 31.706018 62.955626 31.740234 62.964844 C 31.740234 62.964844 31.742188 62.964844 31.742188 62.964844 C 31.827389 62.987709 31.912164 63 31.998047 63 C 31.998047 63 32 63 32 63 C 32.084915 63 32.170963 62.988515 32.253906 62.966797 C 32.270869 62.96233 32.286025 62.952614 32.302734 62.947266 C 32.364945 62.927365 32.427718 62.905437 32.486328 62.873047 L 59.486328 47.873047 C 59.490529 47.870711 59.49194 47.865668 59.496094 47.863281 C 59.505383 47.857968 59.516234 47.857193 59.525391 47.851562 C 59.617266 47.794375 59.694124 47.719395 59.761719 47.638672 C 59.779226 47.617742 59.792963 47.596365 59.808594 47.574219 C 59.868101 47.49044 59.91581 47.400919 59.947266 47.302734 C 59.951353 47.289931 59.957366 47.27858 59.960938 47.265625 C 59.984643 47.17999 60 47.091271 60 47 L 60 17 C 60 16.993054 59.996234 16.987381 59.996094 16.980469 C 59.993415 16.870108 59.968124 16.764795 59.931641 16.664062 C 59.918807 16.62857 59.905277 16.595987 59.888672 16.5625 C 59.848238 16.480377 59.797629 16.406162 59.736328 16.337891 C 59.721241 16.321115 59.711489 16.300875 59.695312 16.285156 C 59.626231 16.217957 59.549139 16.158967 59.460938 16.113281 L 32.460938 2.1132812 C 32.419678 2.0918528 32.375167 2.0816842 32.332031 2.0664062 C 32.307486 2.0576595 32.284915 2.0478309 32.259766 2.0410156 C 32.163251 2.0149531 32.063737 1.9985884 31.964844 2.0019531 z M 33 4.6445312 L 56.796875 16.982422 L 47.015625 21.875 L 33 14.400391 L 33 4.6445312 z M 31 4.6757812 L 31 14.400391 L 17.005859 21.863281 L 8.0996094 17.005859 L 31 4.6757812 z M 32 16.134766 L 44.875 23 L 32 29.865234 L 19.125 23 L 32 16.134766 z M 58 18.619141 L 58 45.382812 L 48 40.382812 L 48 23.617188 L 58 18.619141 z M 7 18.685547 L 16 23.59375 L 16 26 C 16 26.553 16.448 27 17 27 C 17.552 27 18 26.553 18 26 L 18 24.667969 L 31 31.599609 L 31 47.332031 L 18 40.400391 L 18 38 C 18 37.447 17.552 37 17 37 C 16.448 37 16 37.447 16 38 L 16 40.40625 L 7 45.314453 L 7 18.685547 z M 46 24.667969 L 46 41 C 46 41.049957 46.020285 41.09265 46.027344 41.140625 C 46.037847 41.212597 46.044668 41.28372 46.070312 41.351562 C 46.093196 41.411885 46.130499 41.461552 46.164062 41.515625 C 46.197786 41.570634 46.227126 41.625777 46.271484 41.673828 C 46.319893 41.726163 46.37897 41.763661 46.4375 41.804688 C 46.477896 41.833088 46.507229 41.871778 46.552734 41.894531 L 56.857422 47.046875 L 33 60.300781 L 33 49 L 33 31.599609 L 46 24.667969 z M 17 29 C 16.448 29 16 29.447 16 30 L 16 34 C 16 34.553 16.448 35 17 35 C 17.552 35 18 34.553 18 34 L 18 30 C 18 29.447 17.552 29 17 29 z M 43.107422 40.898438 C 42.977922 40.910109 42.849063 40.948422 42.726562 41.013672 C 42.239562 41.273672 42.053453 41.878234 42.314453 42.365234 L 43.255859 44.130859 C 43.435859 44.467859 43.781672 44.660156 44.138672 44.660156 C 44.296672 44.660156 44.458375 44.622969 44.609375 44.542969 C 45.096375 44.282969 45.280531 43.676453 45.019531 43.189453 L 44.078125 41.423828 C 43.883125 41.059328 43.495922 40.863422 43.107422 40.898438 z M 17.003906 42.136719 L 31 49.599609 L 31 60.269531 L 8.0410156 47.023438 L 17.003906 42.136719 z M 38.939453 43.121094 C 38.809984 43.132578 38.680844 43.169625 38.558594 43.234375 C 38.071594 43.494375 37.886484 44.100891 38.146484 44.587891 L 39.087891 46.353516 C 39.268891 46.690516 39.615656 46.882812 39.972656 46.882812 C 40.130656 46.882812 40.290406 46.844625 40.441406 46.765625 C 40.928406 46.505625 41.113516 45.899109 40.853516 45.412109 L 39.912109 43.646484 C 39.716359 43.281984 39.327859 43.086641 38.939453 43.121094 z M 34.773438 45.341797 C 34.643859 45.353469 34.515078 45.391781 34.392578 45.457031 C 33.904578 45.717031 33.720469 46.323547 33.980469 46.810547 L 34.921875 48.574219 C 35.101875 48.911219 35.447688 49.103516 35.804688 49.103516 C 35.962688 49.103516 36.124391 49.066328 36.275391 48.986328 C 36.762391 48.726328 36.946547 48.119813 36.685547 47.632812 L 35.744141 45.867188 C 35.549891 45.502687 35.162172 45.306781 34.773438 45.341797 z" />
      </svg>
    ),
  },
  Vue: {
    icon: (width: string, height: string, color = 'black'): ReactNode => (
      <svg
        fill={color}
        width={width}
        height={height}
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 32 32"
      >
        <path d="M 3 6 L 16 28 L 29 6 L 19 6 L 16 11.300781 L 13 6 L 3 6 z M 6.5 8 L 10.271484 8 L 16 18 L 21.728516 8 L 25.5 8 L 16 24.099609 L 6.5 8 z" />
      </svg>
    ),
  },
  Flex: {
    icon: (): ReactNode => <ion-icon name="bandage-outline"></ion-icon>,
  },
  Mac: {
    icon: (width: string, height: string, color = 'black'): ReactNode => (
      <svg
        fill={color}
        width={width}
        height={height}
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 32 32"
      >
        <path d="M 20.84375 2 C 19.203125 2 17.546875 2.851563 16.4375 4.15625 L 16.4375 4.1875 C 15.648438 5.167969 14.792969 6.714844 15.0625 8.5 C 14.933594 8.449219 14.925781 8.464844 14.78125 8.40625 C 14.089844 8.125 13.234375 7.8125 12.21875 7.8125 C 8.238281 7.8125 5.21875 11.417969 5.21875 16.15625 C 5.21875 19.222656 6.25 22.097656 7.625 24.25 C 8.3125 25.328125 9.09375 26.214844 9.90625 26.875 C 10.71875 27.535156 11.570313 28 12.53125 28 C 13.492188 28 14.210938 27.675781 14.75 27.4375 C 15.289063 27.199219 15.707031 27 16.5 27 C 17.214844 27 17.578125 27.195313 18.125 27.4375 C 18.671875 27.679688 19.417969 28 20.40625 28 C 21.476563 28 22.386719 27.476563 23.125 26.8125 C 23.863281 26.148438 24.484375 25.292969 25 24.46875 C 25.515625 23.644531 25.921875 22.835938 26.21875 22.1875 C 26.367188 21.863281 26.476563 21.59375 26.5625 21.375 C 26.648438 21.15625 26.691406 21.09375 26.75 20.84375 L 26.9375 20.03125 L 26.1875 19.6875 C 26.011719 19.609375 25.3125 19.261719 24.6875 18.625 C 24.0625 17.988281 23.53125 17.117188 23.53125 15.78125 C 23.53125 14.488281 24.027344 13.621094 24.5625 13 C 24.828125 12.691406 25.105469 12.4375 25.3125 12.28125 C 25.417969 12.203125 25.5 12.164063 25.5625 12.125 C 25.625 12.085938 25.613281 12.097656 25.71875 12.03125 L 26.5625 11.5 L 26 10.65625 C 24.367188 8.144531 21.753906 7.8125 20.71875 7.8125 C 20.238281 7.8125 19.898438 7.980469 19.46875 8.0625 C 19.710938 7.835938 20.023438 7.695313 20.21875 7.4375 C 20.222656 7.433594 20.214844 7.410156 20.21875 7.40625 C 20.230469 7.394531 20.242188 7.386719 20.25 7.375 L 20.28125 7.375 C 21.347656 6.183594 21.9375 4.582031 21.84375 2.9375 L 21.78125 2 Z M 19.65625 4.3125 C 19.484375 4.972656 19.203125 5.601563 18.75 6.09375 L 18.6875 6.15625 C 18.304688 6.671875 17.714844 7.054688 17.125 7.28125 C 17.289063 6.628906 17.574219 5.96875 17.96875 5.46875 C 17.976563 5.457031 17.992188 5.449219 18 5.4375 C 18.4375 4.9375 19.042969 4.5625 19.65625 4.3125 Z M 12.21875 9.8125 C 12.777344 9.8125 13.390625 10.023438 14.03125 10.28125 C 14.671875 10.539063 15.269531 10.875 16.125 10.875 C 16.976563 10.875 17.621094 10.539063 18.375 10.28125 C 19.128906 10.023438 19.933594 9.8125 20.71875 9.8125 C 21.242188 9.8125 22.535156 10.144531 23.625 11.15625 C 23.433594 11.328125 23.265625 11.453125 23.0625 11.6875 C 22.300781 12.570313 21.53125 13.945313 21.53125 15.78125 C 21.53125 17.6875 22.363281 19.121094 23.25 20.03125 C 23.800781 20.59375 24.140625 20.726563 24.5625 20.96875 C 24.507813 21.09375 24.476563 21.191406 24.40625 21.34375 C 24.136719 21.929688 23.765625 22.679688 23.3125 23.40625 C 22.859375 24.132813 22.308594 24.839844 21.78125 25.3125 C 21.253906 25.785156 20.78125 26 20.40625 26 C 19.839844 26 19.507813 25.84375 18.9375 25.59375 C 18.367188 25.34375 17.582031 25 16.5 25 C 15.363281 25 14.523438 25.335938 13.9375 25.59375 C 13.351563 25.851563 13.046875 26 12.53125 26 C 12.285156 26 11.753906 25.800781 11.15625 25.3125 C 10.558594 24.824219 9.902344 24.082031 9.3125 23.15625 C 8.128906 21.304688 7.21875 18.761719 7.21875 16.15625 C 7.21875 12.214844 9.417969 9.8125 12.21875 9.8125 Z" />
      </svg>
    ),
  },
  Javascript: {
    icon: (width: string, height: string, color = 'black'): ReactNode => (
      <svg
        fill={color}
        width={width}
        height={height}
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 50 50"
      >
        <path d="M 6.667969 4 C 5.207031 4 4 5.207031 4 6.667969 L 4 43.332031 C 4 44.792969 5.207031 46 6.667969 46 L 43.332031 46 C 44.792969 46 46 44.796875 46 43.332031 L 46 6.667969 C 46 5.207031 44.796875 4 43.332031 4 Z M 6.667969 6 L 43.332031 6 C 43.703125 6 44 6.296875 44 6.667969 L 44 43.332031 C 44 43.703125 43.703125 44 43.332031 44 L 6.667969 44 C 6.296875 44 6 43.703125 6 43.332031 L 6 6.667969 C 6 6.296875 6.296875 6 6.667969 6 Z M 23 23 L 23 35.574219 C 23 37.503906 22.269531 38 21 38 C 19.671875 38 18.75 37.171875 18.140625 36.097656 L 15 38 C 15.910156 39.925781 18.140625 42 21.234375 42 C 24.65625 42 27 40.179688 27 36.183594 L 27 23 Z M 35.453125 23 C 32.046875 23 29.863281 25.179688 29.863281 28.042969 C 29.863281 31.148438 31.695313 32.617188 34.449219 33.789063 L 35.402344 34.199219 C 37.140625 34.960938 38 35.425781 38 36.734375 C 38 37.824219 37.171875 38.613281 35.589844 38.613281 C 33.707031 38.613281 32.816406 37.335938 32 36 L 29 38 C 30.121094 40.214844 32.132813 42 35.675781 42 C 39.300781 42 42 40.117188 42 36.683594 C 42 33.496094 40.171875 32.078125 36.925781 30.6875 L 35.972656 30.28125 C 34.335938 29.570313 33.625 29.109375 33.625 27.964844 C 33.625 27.039063 34.335938 26.328125 35.453125 26.328125 C 36.550781 26.328125 37.253906 26.792969 37.90625 27.964844 L 40.878906 26.058594 C 39.625 23.84375 37.878906 23 35.453125 23 Z" />
      </svg>
    ),
  },
  Error: {
    icon: (): ReactNode => <ion-icon name="bicycle-outline"></ion-icon>,
  },
  Bug: {
    icon: (): ReactNode => <ion-icon name="car-outline"></ion-icon>,
  },

  example: {
    icon: (): ReactNode => (
      <ion-icon name="american-football-outline"></ion-icon>
    ),
  },
  SEO: {
    icon: (): ReactNode => (
      <ion-icon name="american-football-outline"></ion-icon>
    ),
  },

  Web: {
    icon: (): ReactNode => (
      <ion-icon name="american-football-outline"></ion-icon>
    ),
  },
}
